"use strict";!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/stochastic",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){var e=t?t._modules:{};function i(t,e,i,n){t.hasOwnProperty(e)||(t[e]=n.apply(null,i))}i(e,"mixins/reduce-array.js",[e["parts/Globals.js"]],function(t){var e=t.reduce;return{minInArray:function(t,i){return e(t,function(t,e){return Math.min(t,e[i])},Number.MAX_VALUE)},maxInArray:function(t,i){return e(t,function(t,e){return Math.max(t,e[i])},-Number.MAX_VALUE)},getArrayExtremes:function(t,i,n){return e(t,function(t,e){return[Math.min(t[0],e[i]),Math.max(t[1],e[n])]},[Number.MAX_VALUE,-Number.MAX_VALUE])}}}),i(e,"mixins/multipe-lines.js",[e["parts/Globals.js"],e["parts/Utilities.js"]],function(t,e){var c=e.defined,h=t.each,m=t.merge,y=t.error,d=t.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(e){var i=[];return h(this.pointArrayMap,function(t){t!==e&&i.push("plot"+t.charAt(0).toUpperCase()+t.slice(1))}),i},toYData:function(e){var i=[];return h(this.pointArrayMap,function(t){i.push(e[t])}),i},translate:function(){var n,r=this,t=r.pointArrayMap,s=r.getTranslatedLinesNames();d.prototype.translate.apply(r,arguments),h(r.points,function(i){h(t,function(t,e){null!==(n=i[t])&&(i[s[e]]=r.yAxis.toPixels(n,!0))})})},drawGraph:function(){var i,n=this,t=n.pointValKey,e=n.linesApiNames,r=n.points,s=r.length,a=n.options,o=n.graph,p={options:{gapSize:a.gapSize}},l=[],u=n.getTranslatedLinesNames(t);h(u,function(t,e){for(l[e]=[];s--;)i=r[s],l[e].push({x:i.x,plotX:i.plotX,plotY:i[t],isNull:!c(i[t])});s=r.length}),h(e,function(t,e){l[e]?(n.points=l[e],a[t]?n.options=m(a[t].styles,p):y('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),n.graph=n["graph"+t],d.prototype.drawGraph.call(n),n["graph"+t]=n.graph):y('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),n.points=r,n.options=a,n.graph=o,d.prototype.drawGraph.call(n)}}}),i(e,"indicators/stochastic.src.js",[e["parts/Globals.js"],e["parts/Utilities.js"],e["mixins/reduce-array.js"],e["mixins/multipe-lines.js"]],function(t,e,i,n){var f=e.isArray,r=t.merge,g=t.seriesTypes.sma,A=i.getArrayExtremes;t.seriesType("stochastic","sma",{params:{periods:[14,3]},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>%K: {point.y}<br/>%D: {point.smoothed}<br/>'},smoothedLine:{styles:{lineWidth:1,lineColor:void 0}},dataGrouping:{approximation:"averages"}},t.merge(n,{nameComponents:["periods"],nameBase:"Stochastic",pointArrayMap:["y","smoothed"],parallelArrays:["x","y","smoothed"],pointValKey:"y",linesApiNames:["smoothedLine"],init:function(){g.prototype.init.apply(this,arguments),this.options=r({smoothedLine:{styles:{lineColor:this.color}}},this.options)},getValues:function(t,e){var i,n,r,s,a,o=e.periods[0],p=e.periods[1],l=t.xData,u=t.yData,c=u?u.length:0,h=[],m=[],y=[],d=null;if(c<o||!f(u[0])||4!==u[0].length)return!1;for(a=o-1;a<c;a++)i=u.slice(a-o+1,a+1),n=(s=A(i,2,1))[0],r=(u[a][3]-n)/(s[1]-n)*100,m.push(l[a]),y.push([r,null]),o-1+(p-1)<=a&&(d=g.prototype.getValues.call(this,{xData:m.slice(-p),yData:y.slice(-p)},{period:p}).yData[0]),h.push([l[a],r,d]),y[y.length-1][1]=d;return{values:h,xData:m,yData:y}}}))}),i(e,"masters/indicators/stochastic.src.js",[],function(){})});