!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/indicators/keltner-channels",["highcharts","highcharts/modules/stock"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){function t(e,t,i,n){e.hasOwnProperty(t)||(e[t]=n.apply(null,i))}t(e=e?e._modules:{},"mixins/multipe-lines.js",[e["parts/Globals.js"],e["parts/Utilities.js"]],function(e,t){var h=t.defined,u=e.each,d=e.merge,m=e.error,c=e.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(t){var i=[];return u(this.pointArrayMap,function(e){e!==t&&i.push("plot"+e.charAt(0).toUpperCase()+e.slice(1))}),i},toYData:function(t){var i=[];return u(this.pointArrayMap,function(e){i.push(t[e])}),i},translate:function(){var n,o=this,e=o.pointArrayMap,r=o.getTranslatedLinesNames();c.prototype.translate.apply(o,arguments),u(o.points,function(i){u(e,function(e,t){null!==(n=i[e])&&(i[r[t]]=o.yAxis.toPixels(n,!0))})})},drawGraph:function(){var i,n=this,e=n.linesApiNames,o=n.points,r=o.length,s=n.options,t=n.graph,a={options:{gapSize:s.gapSize}},p=[],l=n.getTranslatedLinesNames(n.pointValKey);u(l,function(e,t){for(p[t]=[];r--;)i=o[r],p[t].push({x:i.x,plotX:i.plotX,plotY:i[e],isNull:!h(i[e])});r=o.length}),u(e,function(e,t){p[t]?(n.points=p[t],s[e]?n.options=d(s[e].styles,a):m('Error: "There is no '+e+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),n.graph=n["graph"+e],c.prototype.drawGraph.call(n),n["graph"+e]=n.graph):m('Error: "'+e+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),n.points=o,n.options=s,n.graph=t,c.prototype.drawGraph.call(n)}}}),t(e,"indicators/keltner-channels.src.js",[e["parts/Globals.js"],e["mixins/multipe-lines.js"]],function(e,t){var i=e.seriesTypes.sma,c=e.seriesTypes.ema,y=e.seriesTypes.atr,n=e.merge,f=e.correctFloat;e.seriesType("keltnerchannels","sma",{params:{period:20,periodATR:10,multiplierATR:2},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1,lineColor:void 0}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Upper Channel: {point.top}<br/>EMA({series.options.params.period}): {point.middle}<br/>Lower Channel: {point.bottom}<br/>'},marker:{enabled:!1},dataGrouping:{approximation:"averages"},lineWidth:1},n(t,{pointArrayMap:["top","middle","bottom"],pointValKey:"middle",nameBase:"Keltner Channels",nameComponents:["period","periodATR","multiplierATR"],linesApiNames:["topLine","bottomLine"],requiredIndicators:["ema","atr"],init:function(){i.prototype.init.apply(this,arguments),this.options=n({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)},getValues:function(e,t){var i=t.period,n=t.periodATR,o=t.multiplierATR,r=(r=e.yData)?r.length:0,s=[];t=c.prototype.getValues(e,{period:i,index:t.index});var a,p=y.prototype.getValues(e,{period:n}),l=[],h=[];if(r<i)return!1;for(a=i;a<=r;a++){var u=t.values[a-i],d=p.values[a-n],m=u[0];e=f(u[1]+o*d[1]),d=f(u[1]-o*d[1]),u=u[1],s.push([m,e,u,d]),l.push(m),h.push([e,u,d])}return{values:s,xData:l,yData:h}}}))}),t(e,"masters/indicators/keltner-channels.src.js",[],function(){})});