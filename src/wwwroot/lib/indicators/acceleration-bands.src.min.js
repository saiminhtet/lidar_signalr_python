"use strict";!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/acceleration-bands",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){var e=t?t._modules:{};function a(t,e,a,i){t.hasOwnProperty(e)||(t[e]=i.apply(null,a))}a(e,"mixins/multipe-lines.js",[e["parts/Globals.js"],e["parts/Utilities.js"]],function(t,e){var u=e.defined,h=t.each,d=t.merge,m=t.error,y=t.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(e){var a=[];return h(this.pointArrayMap,function(t){t!==e&&a.push("plot"+t.charAt(0).toUpperCase()+t.slice(1))}),a},toYData:function(e){var a=[];return h(this.pointArrayMap,function(t){a.push(e[t])}),a},translate:function(){var i,n=this,t=n.pointArrayMap,s=n.getTranslatedLinesNames();y.prototype.translate.apply(n,arguments),h(n.points,function(a){h(t,function(t,e){null!==(i=a[t])&&(a[s[e]]=n.yAxis.toPixels(i,!0))})})},drawGraph:function(){var a,i=this,t=i.pointValKey,e=i.linesApiNames,n=i.points,s=n.length,o=i.options,r=i.graph,p={options:{gapSize:o.gapSize}},l=[],c=i.getTranslatedLinesNames(t);h(c,function(t,e){for(l[e]=[];s--;)a=n[s],l[e].push({x:a.x,plotX:a.plotX,plotY:a[t],isNull:!u(a[t])});s=n.length}),h(e,function(t,e){l[e]?(i.points=l[e],o[t]?i.options=d(o[t].styles,p):m('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),i.graph=i["graph"+t],y.prototype.drawGraph.call(i),i["graph"+t]=i.graph):m('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=n,i.options=o,i.graph=r,y.prototype.drawGraph.call(i)}}}),a(e,"indicators/acceleration-bands.src.js",[e["parts/Globals.js"],e["mixins/multipe-lines.js"]],function(t,e){var M=t.seriesTypes.sma,a=t.merge,V=t.correctFloat;t.seriesType("abands","sma",{params:{period:20,factor:.001,index:3},lineWidth:1,topLine:{styles:{lineWidth:1}},bottomLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}},a(e,{pointArrayMap:["top","middle","bottom"],pointValKey:"middle",nameBase:"Acceleration Bands",nameComponents:["period","factor"],linesApiNames:["topLine","bottomLine"],getValues:function(t,e){var a,i,n,s,o,r,p,l,c,u,h,d,m,y,f=e.period,g=e.factor,x=e.index,D=t.xData,A=t.yData,v=A?A.length:0,b=[],j=[],N=[],L=[],T=[];if(v<f)return!1;for(h=0;h<=v;h++)h<v&&(d=A[h][2],m=A[h][1],y=g,o=V(m-d)/(V(m+d)/2)*1e3*y,b.push(A[h][1]*V(1+2*o)),j.push(A[h][2]*V(1-2*o))),f<=h&&(c=D.slice(h-f,h),u=A.slice(h-f,h),p=M.prototype.getValues.call(this,{xData:c,yData:b.slice(h-f,h)},{period:f}),l=M.prototype.getValues.call(this,{xData:c,yData:j.slice(h-f,h)},{period:f}),s=(r=M.prototype.getValues.call(this,{xData:c,yData:u},{period:f,index:x})).xData[0],i=p.yData[0],n=l.yData[0],a=r.yData[0],N.push([s,i,a,n]),L.push(s),T.push([i,a,n]));return{values:N,xData:L,yData:T}}}))}),a(e,"masters/indicators/acceleration-bands.src.js",[],function(){})});