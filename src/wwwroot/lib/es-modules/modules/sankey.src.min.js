"use strict";import H from"../parts/Globals.js";import U from"../parts/Utilities.js";var defined=U.defined,isObject=U.isObject,pick=U.pick;import"../parts/Options.js";import"../mixins/nodes.js";import mixinTreeSeries from"../mixins/tree-series.js";var getLevelOptions=mixinTreeSeries.getLevelOptions,find=H.find,merge=H.merge,seriesType=H.seriesType,Point=H.Point,getDLOptions=function(t){var o=isObject(t.optionsPoint)?t.optionsPoint.dataLabels:{},e=isObject(t.level)?t.level.dataLabels:{};return merge({style:{}},e,o)};seriesType("sankey","column",{borderWidth:0,colorByPoint:!0,curveFactor:.33,dataLabels:{enabled:!0,backgroundColor:"none",crop:!1,nodeFormat:void 0,nodeFormatter:function(){return this.point.name},format:void 0,formatter:function(){},inside:!0},inactiveOtherPoints:!0,linkOpacity:.5,minLinkWidth:0,nodeWidth:20,nodePadding:10,showInLegend:!1,states:{hover:{linkOpacity:1},inactive:{linkOpacity:.1,opacity:.1,animation:{duration:50}}},tooltip:{followPointer:!0,headerFormat:'<span style="font-size: 10px">{series.name}</span><br/>',pointFormat:"{point.fromNode.name} â†’ {point.toNode.name}: <b>{point.weight}</b><br/>",nodeFormat:"{point.name}: <b>{point.sum}</b><br/>"}},{isCartesian:!1,invertable:!0,forceDL:!0,orderNodes:!0,pointArrayMap:["from","to"],createNode:H.NodesMixin.createNode,setData:H.NodesMixin.setData,destroy:H.NodesMixin.destroy,getNodePadding:function(){return this.options.nodePadding},createNodeColumn:function(){var t=this.chart,o=[],e=this.getNodePadding();return o.sum=function(){return this.reduce(function(t,o){return t+o.getSum()},0)},o.offset=function(t,i){for(var n,s=0,r=0;r<o.length;r++){if(n=o[r].getSum()*i+e,o[r]===t)return{relativeTop:s+H.relativeLength(t.options.offset||0,n)};s+=n}},o.top=function(o){var i=this.reduce(function(t,i){return t>0&&(t+=e),t+=i.getSum()*o},0);return(t.plotSizeY-i)/2},o},createNodeColumns:function(){var t=[];this.nodes.forEach(function(o){var e,i,n,s=-1;if(!defined(o.options.column))if(0===o.linksTo.length)o.column=0;else{for(i=0;i<o.linksTo.length;i++)(n=o.linksTo[0]).fromNode.column>s&&(s=(e=n.fromNode).column);o.column=s+1,e&&"hanging"===e.options.layout&&(o.hangsFrom=e,i=-1,find(e.linksFrom,function(t,e){var n=t.toNode===o;return n&&(i=e),n}),o.column+=i)}t[o.column]||(t[o.column]=this.createNodeColumn()),t[o.column].push(o)},this);for(var o=0;o<t.length;o++)void 0===t[o]&&(t[o]=this.createNodeColumn());return t},hasData:function(){return!!this.processedXData.length},pointAttribs:function(t,o){var e=this,i=t.isNode?t.level:t.fromNode.level,n=e.mapOptionsToLevel[i||0]||{},s=t.options,r=n.states&&n.states[o]||{},a=["colorByPoint","borderColor","borderWidth","linkOpacity"].reduce(function(t,o){return t[o]=pick(r[o],s[o],n[o],e.options[o]),t},{}),l=pick(r.color,s.color,a.colorByPoint?t.color:n.color);return t.isNode?{fill:l,stroke:a.borderColor,"stroke-width":a.borderWidth}:{fill:H.color(l).setOpacity(a.linkOpacity).get()}},generatePoints:function(){H.NodesMixin.generatePoints.apply(this,arguments),this.orderNodes&&(this.nodes.filter(function(t){return 0===t.linksTo.length}).forEach(function(t){!function t(o,e){void 0===o.level&&(o.level=e,o.linksFrom.forEach(function(o){t(o.toNode,e+1)}))}(t,0)}),H.stableSort(this.nodes,function(t,o){return t.level-o.level}))},translateNode:function(t,o){var e=this.translationFactor,i=this.chart,n=this.options,s=t.getSum(),r=Math.round(s*e),a=Math.round(n.borderWidth)%2/2,l=o.offset(t,e),h=Math.floor(pick(l.absoluteTop,o.top(e)+l.relativeTop))+a,d=Math.floor(this.colDistance*t.column+n.borderWidth/2)+a,c=i.inverted?i.plotSizeX-d:d,p=Math.round(this.nodeWidth);t.sum=s,t.shapeType="rect",t.nodeX=c,t.nodeY=h,i.inverted?t.shapeArgs={x:c-p,y:i.plotSizeY-h-r,width:t.options.height||n.height||p,height:t.options.width||n.width||r}:t.shapeArgs={x:c,y:h,width:t.options.width||n.width||p,height:t.options.height||n.height||r},t.shapeArgs.display=t.hasShape()?"":"none",t.dlOptions=getDLOptions({level:this.mapOptionsToLevel[t.level],optionsPoint:t.options}),t.plotY=1},translateLink:function(t){var o=t.fromNode,e=t.toNode,i=this.chart,n=this.translationFactor,s=Math.max(t.weight*n,this.options.minLinkWidth),r=this.options,a=o.offset(t,"linksFrom")*n,l=(i.inverted?-this.colDistance:this.colDistance)*r.curveFactor,h=o.nodeY+a,d=o.nodeX,c=this.nodeColumns[e.column].top(n)+e.offset(t,"linksTo")*n+this.nodeColumns[e.column].offset(e,n).relativeTop,p=this.nodeWidth,u=e.column*this.colDistance,f=t.outgoing,m=u>d;if(i.inverted&&(h=i.plotSizeY-h,c=i.plotSizeY-c,p=-p,s=-s,m=d>(u=i.plotSizeX-u)),t.shapeType="path",t.linkBase=[h,h+s,c,c+s],m)t.shapeArgs={d:["M",d+p,h,"C",d+p+l,h,u-l,c,u,c,"L",u+(f?p:0),c+s/2,"L",u,c+s,"C",u-l,c+s,d+p+l,h+s,d+p,h+s,"z"]};else{var g=u-20-s,v=u-20,y=u,b=d+p,k=b+20,N=k+s,C=h,L=h+s,O=L+20,P=O+(i.plotHeight-h-s),S=P+20,T=S+s,W=c,H=W+s,x=H+20,M=L-.7*s,w=S+.7*s,F=H-.7*s,D=y-.7*s,z=b+.7*s;t.shapeArgs={d:["M",b,C,"C",z,C,N,M,N,O,"L",N,P,"C",N,w,z,T,b,T,"L",y,T,"C",D,T,g,w,g,P,"L",g,x,"C",g,F,D,W,y,W,"L",y,H,"C",v,H,v,H,v,x,"L",v,P,"C",v,S,v,S,y,S,"L",b,S,"C",k,S,k,S,k,P,"L",k,O,"C",k,L,k,L,b,L,"z"]}}t.dlBox={x:d+(u-d+p)/2,y:h+(c-h)/2,height:s,width:0},t.y=t.plotY=1,t.color||(t.color=o.color)},translate:function(){this.processedXData||this.processData(),this.generatePoints(),this.nodeColumns=this.createNodeColumns(),this.nodeWidth=H.relativeLength(this.options.nodeWidth,this.chart.plotSizeX);var t=this,o=this.chart,e=this.options,i=this.nodeWidth,n=this.nodeColumns,s=this.getNodePadding();this.translationFactor=n.reduce(function(t,i){var n=o.plotSizeY-e.borderWidth-(i.length-1)*s;return Math.min(t,n/i.sum())},1/0),this.colDistance=(o.plotSizeX-i-e.borderWidth)/Math.max(1,n.length-1),t.mapOptionsToLevel=getLevelOptions({from:1,levels:e.levels,to:n.length-1,defaults:{borderColor:e.borderColor,borderRadius:e.borderRadius,borderWidth:e.borderWidth,color:t.color,colorByPoint:e.colorByPoint,levelIsConstant:!0,linkColor:e.linkColor,linkLineWidth:e.linkLineWidth,linkOpacity:e.linkOpacity,states:e.states}}),n.forEach(function(o){o.forEach(function(e){t.translateNode(e,o)})},this),this.nodes.forEach(function(o){o.linksFrom.forEach(function(o){t.translateLink(o),o.allowShadow=!1})})},render:function(){var t=this.points;this.points=this.points.concat(this.nodes||[]),H.seriesTypes.column.prototype.render.call(this),this.points=t},animate:H.Series.prototype.animate},{applyOptions:function(t,o){return Point.prototype.applyOptions.call(this,t,o),defined(this.options.level)&&(this.options.column=this.column=this.options.level),this},setState:H.NodesMixin.setNodeState,getClassName:function(){return(this.isNode?"highcharts-node ":"highcharts-link ")+Point.prototype.getClassName.call(this)},isValid:function(){return this.isNode||"number"==typeof this.weight}});