"use strict";function GLVertexBuffer(e,r,t){var n,f=!1,a=!1,u=t||2,i=!1,o=0;function A(){f&&(e.deleteBuffer(f),f=!1,a=!1),o=0,u=t||2,n=[]}return{destroy:A,bind:function(){if(!f)return!1;e.vertexAttribPointer(a,u,e.FLOAT,!1,0,0)},data:n,build:function(t,o,l){var c;return(n=t||[])&&0!==n.length||i?(u=l||u,f&&e.deleteBuffer(f),i||(c=new Float32Array(n)),f=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,f),e.bufferData(e.ARRAY_BUFFER,i||c,e.STATIC_DRAW),a=e.getAttribLocation(r.program(),o),e.enableVertexAttribArray(a),c=!1,!0):(A(),!1)},render:function(r,t,a){var o=i?i.length:n.length;return!!f&&!!o&&((!r||r>o||r<0)&&(r=0),(!t||t>o)&&(t=o),a=a||"points",e.drawArrays(e[a.toUpperCase()],r/u,(t-r)/u),!0)},allocate:function(e){o=-1,i=new Float32Array(e*=4)},push:function(e,r,t,n){i&&(i[++o]=e,i[++o]=r,i[++o]=t,i[++o]=n)}}}export default GLVertexBuffer;