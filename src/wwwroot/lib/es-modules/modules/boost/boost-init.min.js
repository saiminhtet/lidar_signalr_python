"use strict";import H from"../../parts/Globals.js";import U from"../../parts/Utilities.js";var extend=U.extend;import"../../parts/Series.js";import butils from"./boost-utils.js";import createAndAttachRenderer from"./boost-attach.js";var index,addEvent=H.addEvent,fireEvent=H.fireEvent,Series=H.Series,seriesTypes=H.seriesTypes,wrap=H.wrap,noop=function(){},eachAsync=butils.eachAsync,pointDrawHandler=butils.pointDrawHandler,allocateIfNotSeriesBoosting=butils.allocateIfNotSeriesBoosting,renderIfNotSeriesBoosting=butils.renderIfNotSeriesBoosting,shouldForceChartSeriesBoosting=butils.shouldForceChartSeriesBoosting;function init(){extend(Series.prototype,{renderCanvas:function(){var e,t,r,i,s,o,a,n=this,p=n.options||{},l=!1,d=n.chart,h=this.xAxis,u=this.yAxis,c=p.xData||n.processedXData,g=p.yData||n.processedYData,m=p.data,x=h.getExtremes(),y=x.min,b=x.max,f=u.getExtremes(),v=f.min,B=f.max,k={},S=!!n.sampling,T=!1!==p.enableMouseTracking,A=p.threshold,G=u.getThreshold(A),D=n.pointArrayMap&&"low,high"===n.pointArrayMap.join(","),C=!!p.stacking,E=n.cropStart||0,w=n.requireSorting,H=!c,N="x"===p.findNearestPointBy,j=this.xData||this.options.xData||this.processedXData||!1,I=function(e,r,i){e=Math.ceil(e),index=N?e:e+","+r,T&&!k[index]&&(k[index]=!0,d.inverted&&(e=h.len-e,r=u.len-r),t.push({x:!!j&&j[E+i],clientX:e,plotX:e,plotY:r,i:E+i}))};l=createAndAttachRenderer(d,n),d.isBoosting=!0,a=l.settings,this.visible&&((this.points||this.graph)&&(this.animate=null,this.destroyGraphics()),d.isChartSeriesBoosting()?(this.markerGroup&&this.markerGroup!==d.markerGroup&&this.markerGroup.destroy(),this.markerGroup=d.markerGroup,this.renderTarget&&(this.renderTarget=this.renderTarget.destroy())):(this.markerGroup===d.markerGroup&&(this.markerGroup=void 0),this.markerGroup=n.plotGroup("markerGroup","markers",!0,1,d.seriesGroup)),t=this.points=[],n.buildKDTree=noop,l&&(allocateIfNotSeriesBoosting(l,this),l.pushSeries(n),renderIfNotSeriesBoosting(l,this,d)),d.renderer.forExport||(a.debug.timeKDTree&&console.time("kd tree building"),eachAsync(C?n.data:c||m,function(t,a){var n,p,l,c,m=!1,x=void 0===d.index,f=!0;return x||(H?(n=t[0],p=t[1]):(n=t,p=g[a]),D?(H&&(p=t.slice(1,3)),m=p[0],p=p[1]):C&&(n=t.x,m=(p=t.stackY)-t.y),w||(f=p>=v&&p<=B),!(null===p)&&n>=y&&n<=b&&f&&(l=h.toPixels(n,!0),S?(void 0!==s&&l!==e||(D||(m=p),(void 0===o||p>i)&&(i=p,o=a),(void 0===s||m<r)&&(r=m,s=a)),l!==e&&(void 0!==s&&(c=u.toPixels(i,!0),G=u.toPixels(r,!0),I(l,c,o),G!==c&&I(l,G,s)),s=o=void 0,e=l)):(c=Math.ceil(u.toPixels(p,!0)),I(l,c,a)))),!x},function(){fireEvent(n,"renderedCanvas"),delete n.buildKDTree,n.buildKDTree(),a.debug.timeKDTree&&console.timeEnd("kd tree building")})))}}),["heatmap","treemap"].forEach(function(e){seriesTypes[e]&&wrap(seriesTypes[e].prototype,"drawPoints",pointDrawHandler)}),seriesTypes.bubble&&(delete seriesTypes.bubble.prototype.buildKDTree,wrap(seriesTypes.bubble.prototype,"markerAttribs",function(e){return!this.isSeriesBoosting&&e.apply(this,[].slice.call(arguments,1))})),seriesTypes.scatter.prototype.fill=!0,extend(seriesTypes.area.prototype,{fill:!0,fillOpacity:!0,sampling:!0}),extend(seriesTypes.column.prototype,{fill:!0,sampling:!0}),H.Chart.prototype.callbacks.push(function(e){addEvent(e,"predraw",function(){e.boostForceChartBoost=void 0,e.boostForceChartBoost=shouldForceChartSeriesBoosting(e),e.isBoosting=!1,!e.isChartSeriesBoosting()&&e.didBoost&&(e.didBoost=!1),e.boostClear&&e.boostClear(),e.canvas&&e.ogl&&e.isChartSeriesBoosting()&&(e.didBoost=!0,e.ogl.allocateBuffer(e)),e.markerGroup&&e.xAxis&&e.xAxis.length>0&&e.yAxis&&e.yAxis.length>0&&e.markerGroup.translate(e.xAxis[0].pos,e.yAxis[0].pos)}),addEvent(e,"render",function(){e.ogl&&e.isChartSeriesBoosting()&&e.ogl.render(e)})})}export default init;