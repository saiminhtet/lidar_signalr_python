"use strict";import H from"../parts/Globals.js";import U from"../parts/Utilities.js";var defined=U.defined,destroyObjectProperties=U.destroyObjectProperties,erase=U.erase,extend=U.extend,pick=U.pick,splat=U.splat;import"../parts/Chart.js";import controllableMixin from"./controllable/controllableMixin.js";import ControllableRect from"./controllable/ControllableRect.js";import ControllableCircle from"./controllable/ControllableCircle.js";import ControllablePath from"./controllable/ControllablePath.js";import ControllableImage from"./controllable/ControllableImage.js";import ControllableLabel from"./controllable/ControllableLabel.js";import eventEmitterMixin from"./eventEmitterMixin.js";import MockPoint from"./MockPoint.js";import ControlPoint from"./ControlPoint.js";var merge=H.merge,addEvent=H.addEvent,fireEvent=H.fireEvent,find=H.find,reduce=H.reduce,chartProto=H.Chart.prototype,Annotation=H.Annotation=function(t,i){var o;this.chart=t,this.points=[],this.controlPoints=[],this.coll="annotations",this.labels=[],this.shapes=[],this.options=merge(this.defaultOptions,i),this.userOptions=i,o=this.getLabelsAndShapesOptions(this.options,i),this.options.labels=o.labels,this.options.shapes=o.shapes,this.init(t,this.options)};merge(!0,Annotation.prototype,controllableMixin,eventEmitterMixin,{nonDOMEvents:["add","afterUpdate","drag","remove"],defaultOptions:{visible:!0,draggable:"xy",labelOptions:{align:"center",allowOverlap:!1,backgroundColor:"rgba(0, 0, 0, 0.75)",borderColor:"black",borderRadius:3,borderWidth:1,className:"",crop:!1,formatter:function(){return defined(this.y)?this.y:"Annotation label"},overflow:"justify",padding:5,shadow:!1,shape:"callout",style:{fontSize:"11px",fontWeight:"normal",color:"contrast"},useHTML:!1,verticalAlign:"bottom",x:0,y:-16},shapeOptions:{stroke:"rgba(0, 0, 0, 0.75)",strokeWidth:1,fill:"rgba(0, 0, 0, 0.75)",r:0,snap:2},controlPointOptions:{symbol:"circle",width:10,height:10,style:{stroke:"black","stroke-width":2,fill:"white"},visible:!1,events:{}},events:{},zIndex:6},init:function(){this.linkPoints(),this.addControlPoints(),this.addShapes(),this.addLabels(),this.addClipPaths(),this.setLabelCollector()},getLabelsAndShapesOptions:function(t,i){var o={};return["labels","shapes"].forEach(function(n){t[n]&&(o[n]=splat(i[n]).map(function(i,o){return merge(t[n][o],i)}))}),o},addShapes:function(){(this.options.shapes||[]).forEach(function(t,i){var o=this.initShape(t,i);merge(!0,this.options.shapes[i],o.options)},this)},addLabels:function(){(this.options.labels||[]).forEach(function(t,i){var o=this.initLabel(t,i);merge(!0,this.options.labels[i],o.options)},this)},addClipPaths:function(){this.setClipAxes(),this.clipXAxis&&this.clipYAxis&&(this.clipRect=this.chart.renderer.clipRect(this.getClipBox()))},setClipAxes:function(){var t=this.chart.xAxis,i=this.chart.yAxis,o=reduce((this.options.labels||[]).concat(this.options.shapes||[]),function(o,n){return[t[n&&n.point&&n.point.xAxis]||o[0],i[n&&n.point&&n.point.yAxis]||o[1]]},[]);this.clipXAxis=o[0],this.clipYAxis=o[1]},getClipBox:function(){return{x:this.clipXAxis.left,y:this.clipYAxis.top,width:this.clipXAxis.width,height:this.clipYAxis.height}},setLabelCollector:function(){var t=this;t.labelCollector=function(){return t.labels.reduce(function(t,i){return i.options.allowOverlap||t.push(i.graphic),t},[])},t.chart.labelCollectors.push(t.labelCollector)},setOptions:function(t){this.options=merge(this.defaultOptions,t)},redraw:function(t){this.linkPoints(),this.graphic||this.render(),this.clipRect&&this.clipRect.animate(this.getClipBox()),this.redrawItems(this.shapes,t),this.redrawItems(this.labels,t),controllableMixin.redraw.call(this,t)},redrawItems:function(t,i){for(var o=t.length;o--;)this.redrawItem(t[o],i)},render:function(){var t=this.chart.renderer;this.graphic=t.g("annotation").attr({zIndex:this.options.zIndex,visibility:this.options.visible?"visible":"hidden"}).add(),this.shapesGroup=t.g("annotation-shapes").add(this.graphic).clip(this.chart.plotBoxClip),this.labelsGroup=t.g("annotation-labels").attr({translateX:0,translateY:0}).add(this.graphic),this.clipRect&&this.graphic.clip(this.clipRect),this.addEvents(),controllableMixin.render.call(this)},setVisibility:function(t){var i=this.options,o=pick(t,!i.visible);this.graphic.attr("visibility",o?"visible":"hidden"),o||this.setControlPointsVisibility(!1),i.visible=o},setControlPointsVisibility:function(t){var i=function(i){i.setControlPointsVisibility(t)};controllableMixin.setControlPointsVisibility.call(this,t),this.shapes.forEach(i),this.labels.forEach(i)},destroy:function(){var t=this.chart,i=function(t){t.destroy()};this.labels.forEach(i),this.shapes.forEach(i),this.clipXAxis=null,this.clipYAxis=null,erase(t.labelCollectors,this.labelCollector),eventEmitterMixin.destroy.call(this),controllableMixin.destroy.call(this),destroyObjectProperties(this,t)},remove:function(){return this.chart.removeAnnotation(this)},update:function(t){var i=this.chart,o=this.getLabelsAndShapesOptions(this.userOptions,t),n=i.annotations.indexOf(this),s=H.merge(!0,this.userOptions,t);s.labels=o.labels,s.shapes=o.shapes,this.destroy(),this.constructor(i,s),i.options.annotations[n]=s,this.isUpdating=!0,this.redraw(),this.isUpdating=!1,fireEvent(this,"afterUpdate")},initShape:function(t,i){var o=merge(this.options.shapeOptions,{controlPointOptions:this.options.controlPointOptions},t),n=new Annotation.shapesMap[o.type](this,o,i);return n.itemType="shape",this.shapes.push(n),n},initLabel:function(t,i){var o=merge(this.options.labelOptions,{controlPointOptions:this.options.controlPointOptions},t),n=new ControllableLabel(this,o,i);return n.itemType="label",this.labels.push(n),n},redrawItem:function(t,i){t.linkPoints(),t.shouldBeDrawn()?(t.graphic||this.renderItem(t),t.redraw(pick(i,!0)&&t.graphic.placed),t.points.length&&this.adjustVisibility(t)):this.destroyItem(t)},adjustVisibility:function(t){var i=!1,o=t.graphic;t.points.forEach(function(t){!1!==t.series.visible&&!1!==t.visible&&(i=!0)}),i?"hidden"===o.visibility&&o.show():o.hide()},destroyItem:function(t){erase(this[t.itemType+"s"],t),t.destroy()},renderItem:function(t){t.render("label"===t.itemType?this.labelsGroup:this.shapesGroup)}}),Annotation.shapesMap={rect:ControllableRect,circle:ControllableCircle,path:ControllablePath,image:ControllableImage},Annotation.types={},Annotation.MockPoint=MockPoint,Annotation.ControlPoint=ControlPoint,H.extendAnnotation=function(t,i,o,n){i=i||Annotation,merge(!0,t.prototype,i.prototype,o),t.prototype.defaultOptions=merge(t.prototype.defaultOptions,n||{})},extend(chartProto,{initAnnotation:function(t){var i=new(Annotation.types[t.type]||Annotation)(this,t);return this.annotations.push(i),i},addAnnotation:function(t,i){var o=this.initAnnotation(t);return this.options.annotations.push(o.options),pick(i,!0)&&o.redraw(),o},removeAnnotation:function(t){var i=this.annotations,o="annotations"===t.coll?t:find(i,function(i){return i.options.id===t});o&&(fireEvent(o,"remove"),erase(this.options.annotations,o.options),erase(i,o),o.destroy())},drawAnnotations:function(){this.plotBoxClip.attr(this.plotBox),this.annotations.forEach(function(t){t.redraw()})}}),chartProto.collectionsWithUpdate.push("annotations"),chartProto.collectionsWithInit.annotations=[chartProto.addAnnotation],chartProto.callbacks.push(function(t){t.annotations=[],t.options.annotations||(t.options.annotations=[]),t.plotBoxClip=this.renderer.clipRect(this.plotBox),t.controlPointsGroup=t.renderer.g("control-points").attr({zIndex:99}).clip(t.plotBoxClip).add(),t.options.annotations.forEach(function(i,o){var n=t.initAnnotation(i);t.options.annotations[o]=n.options}),t.drawAnnotations(),addEvent(t,"redraw",t.drawAnnotations),addEvent(t,"destroy",function(){t.plotBoxClip.destroy(),t.controlPointsGroup.destroy()})}),H.wrap(H.Pointer.prototype,"onContainerMouseDown",function(t){this.chart.hasDraggedAnnotation||t.apply(this,Array.prototype.slice.call(arguments,1))});