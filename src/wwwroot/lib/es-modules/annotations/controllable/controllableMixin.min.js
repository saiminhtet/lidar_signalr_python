"use strict";import H from"./../../parts/Globals.js";import U from"./../../parts/Utilities.js";var isObject=U.isObject,isString=U.isString,splat=U.splat;import"./../../parts/Tooltip.js";import ControlPoint from"./../ControlPoint.js";import MockPoint from"./../MockPoint.js";var controllableMixin={init:function(t,i,n){this.annotation=t,this.chart=t.chart,this.options=i,this.points=[],this.controlPoints=[],this.index=n,this.linkPoints(),this.addControlPoints()},attr:function(){this.graphic.attr.apply(this.graphic,arguments)},getPointsOptions:function(){var t=this.options;return t.points||t.point&&splat(t.point)},attrsFromOptions:function(t){var i,n,o=this.constructor.attrsMap,s={},r=this.chart.styledMode;for(i in t)!(n=o[i])||r&&-1!==["fill","stroke","stroke-width"].indexOf(n)||(s[n]=t[i]);return s},anchor:function(t){var i=t.series.getPlotBox(),n=t.mock?t.toAnchor():H.Tooltip.prototype.getAnchor.call({chart:t.series.chart},t),o={x:n[0]+(this.options.x||0),y:n[1]+(this.options.y||0),height:n[2]||0,width:n[3]||0};return{relativePosition:o,absolutePosition:H.merge(o,{x:o.x+i.translateX,y:o.y+i.translateY})}},point:function(t,i){if(t&&t.series)return t;if(!i||null===i.series)if(isObject(t))i=new MockPoint(this.chart,this,t);else if(isString(t))i=this.chart.get(t)||null;else if("function"==typeof t){var n=t.call(i,this);i=n.series?n:new MockPoint(this.chart,this,t)}return i},linkPoints:function(){var t,i,n=this.getPointsOptions(),o=this.points,s=n&&n.length||0;for(t=0;t<s;t++){if(!(i=this.point(n[t],o[t])))return void(o.length=0);i.mock&&i.refresh(),o[t]=i}return o},addControlPoints:function(){var t=this.options.controlPoints;(t||[]).forEach(function(i,n){var o=H.merge(this.options.controlPointOptions,i);o.index||(o.index=n),t[n]=o,this.controlPoints.push(new ControlPoint(this.chart,this,o))},this)},shouldBeDrawn:function(){return Boolean(this.points.length)},render:function(){this.controlPoints.forEach(function(t){t.render()})},redraw:function(t){this.controlPoints.forEach(function(i){i.redraw(t)})},transform:function(t,i,n,o,s){if(this.chart.inverted){var r=i;i=n,n=r}this.points.forEach(function(r,a){this.transformPoint(t,i,n,o,s,a)},this)},transformPoint:function(t,i,n,o,s,r){var a=this.points[r];a.mock||(a=this.points[r]=MockPoint.fromPoint(a)),a[t](i,n,o,s)},translate:function(t,i){this.transform("translate",null,null,t,i)},translatePoint:function(t,i,n){this.transformPoint("translate",null,null,t,i,n)},translateShape:function(t,i){var n=this.annotation.chart,o=this.annotation.userOptions,s=n.annotations.indexOf(this.annotation),r=n.options.annotations[s];this.translatePoint(t,i,0),r[this.collection][this.index].point=this.options.point,o[this.collection][this.index].point=this.options.point},rotate:function(t,i,n){this.transform("rotate",t,i,n)},scale:function(t,i,n,o){this.transform("scale",t,i,n,o)},setControlPointsVisibility:function(t){this.controlPoints.forEach(function(i){i.setVisibility(t)})},destroy:function(){this.graphic&&(this.graphic=this.graphic.destroy()),this.tracker&&(this.tracker=this.tracker.destroy()),this.controlPoints.forEach(function(t){t.destroy()}),this.chart=null,this.points=null,this.controlPoints=null,this.options=null,this.annotation&&(this.annotation=null)},update:function(t){var i=this.annotation,n=H.merge(!0,this.options,t),o=this.graphic.parentGroup;this.destroy(),this.constructor(i,n),this.render(o),this.redraw()}};export default controllableMixin;