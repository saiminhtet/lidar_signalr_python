"use strict";import H from"../../parts/Globals.js";import U from"../../parts/Utilities.js";var extend=U.extend,isNumber=U.isNumber,Annotation=H.Annotation,ControlPoint=Annotation.ControlPoint,merge=H.merge;function Measure(){Annotation.apply(this,arguments)}Annotation.types.measure=Measure,H.extendAnnotation(Measure,null,{init:function(){Annotation.prototype.init.apply(this,arguments),this.offsetX=0,this.offsetY=0,this.resizeX=0,this.resizeY=0,this.calculations.init.call(this),this.addValues(),this.addShapes()},setClipAxes:function(){this.clipXAxis=this.chart.xAxis[this.options.typeOptions.xAxis],this.clipYAxis=this.chart.yAxis[this.options.typeOptions.yAxis]},pointsOptions:function(){return this.options.options.points},shapePointsOptions:function(){var t=this.options.typeOptions,i=t.xAxis,s=t.yAxis;return[{x:this.xAxisMin,y:this.yAxisMin,xAxis:i,yAxis:s},{x:this.xAxisMax,y:this.yAxisMin,xAxis:i,yAxis:s},{x:this.xAxisMax,y:this.yAxisMax,xAxis:i,yAxis:s},{x:this.xAxisMin,y:this.yAxisMax,xAxis:i,yAxis:s}]},addControlPoints:function(){var t,i=this.options.typeOptions.selectType;t=new ControlPoint(this.chart,this,this.options.controlPointOptions,0),this.controlPoints.push(t),"xy"!==i&&(t=new ControlPoint(this.chart,this,this.options.controlPointOptions,1),this.controlPoints.push(t))},addValues:function(t){var i=this.options.typeOptions,s=i.label.formatter;this.calculations.recalculate.call(this,t),i.label.enabled&&(this.labels.length>0?this.labels[0].text=s&&s.call(this)||this.calculations.defaultFormatter.call(this):this.initLabel(extend({shape:"rect",backgroundColor:"none",color:"black",borderWidth:0,dashStyle:"dash",overflow:"none",align:"left",vertical:"top",crop:!0,point:function(t){var s=t.annotation,n=s.chart,a=n.inverted,o=n.xAxis[i.xAxis],e=n.yAxis[i.yAxis],h=n.plotTop,r=n.plotLeft;return{x:(a?h:10)+o.toPixels(s.xAxisMin,!a),y:(a?10-r:h)+e.toPixels(s.yAxisMin)}},text:s&&s.call(this)||this.calculations.defaultFormatter.call(this)},i.label)))},addShapes:function(){this.addCrosshairs(),this.addBackground()},addBackground:function(){void 0!==this.shapePointsOptions()[0].x&&this.initShape(extend({type:"path",points:this.shapePointsOptions()},this.options.typeOptions.background),!1)},addCrosshairs:function(){var t,i,s,n=this.chart,a=this.options.typeOptions,o=this.options.typeOptions.point,e=n.xAxis[a.xAxis],h=n.yAxis[a.yAxis],r=n.inverted,x=e.toPixels(this.xAxisMin),l=e.toPixels(this.xAxisMax),p=h.toPixels(this.yAxisMin),c=h.toPixels(this.yAxisMax),y={point:o,type:"path"},M=[],A=[];r&&(s=x,x=p,p=s,s=l,l=c,c=s),a.crosshairX.enabled&&(M=["M",x,p+(c-p)/2,"L",l,p+(c-p)/2]),a.crosshairY.enabled&&(A=["M",x+(l-x)/2,p,"L",x+(l-x)/2,c]),this.shapes.length>0?(this.shapes[0].options.d=M,this.shapes[1].options.d=A):(t=merge(y,a.crosshairX),i=merge(y,a.crosshairY),this.initShape(extend({d:M},t),!1),this.initShape(extend({d:A},i),!1))},onDrag:function(t){var i=this.mouseMoveToTranslation(t),s=this.options.typeOptions.selectType,n="y"===s?0:i.x,a="x"===s?0:i.y;this.translate(n,a),this.offsetX+=n,this.offsetY+=a,this.redraw(!1,!1,!0)},resize:function(t,i,s,n){var a=this.shapes[2];"x"===n?0===s?(a.translatePoint(t,0,0),a.translatePoint(t,i,3)):(a.translatePoint(t,0,1),a.translatePoint(t,i,2)):"y"===n?0===s?(a.translatePoint(0,i,0),a.translatePoint(0,i,1)):(a.translatePoint(0,i,2),a.translatePoint(0,i,3)):(a.translatePoint(t,0,1),a.translatePoint(t,i,2),a.translatePoint(0,i,3)),this.calculations.updateStartPoints.call(this,!1,!0,s,t,i),this.options.typeOptions.background.height=Math.abs(this.startYMax-this.startYMin),this.options.typeOptions.background.width=Math.abs(this.startXMax-this.startXMin)},redraw:function(t,i,s){this.linkPoints(),this.graphic||this.render(),s&&this.calculations.updateStartPoints.call(this,!0,!1),this.clipRect&&this.clipRect.animate(this.getClipBox()),this.addValues(i),this.addCrosshairs(),this.redrawItems(this.shapes,t),this.redrawItems(this.labels,t),this.controlPoints.forEach(function(t){t.redraw()})},translate:function(t,i){this.shapes.forEach(function(s){s.translate(t,i)}),this.options.typeOptions.point.x=this.startXMin,this.options.typeOptions.point.y=this.startYMin},calculations:{init:function(){var t=this.options.typeOptions,i=this.chart,s=this.calculations.getPointPos,n=i.inverted,a=i.xAxis[t.xAxis],o=i.yAxis[t.yAxis],e=t.background,h=n?e.height:e.width,r=n?e.width:e.height,x=t.selectType,l=n?i.plotLeft:i.plotTop,p=n?i.plotTop:i.plotLeft;this.startXMin=t.point.x,this.startYMin=t.point.y,isNumber(h)?this.startXMax=this.startXMin+h:this.startXMax=s(a,this.startXMin,parseFloat(h)),isNumber(r)?this.startYMax=this.startYMin-r:this.startYMax=s(o,this.startYMin,parseFloat(r)),"x"===x?(this.startYMin=o.toValue(l),this.startYMax=o.toValue(l+o.len)):"y"===x&&(this.startXMin=a.toValue(p),this.startXMax=a.toValue(p+a.len))},recalculate:function(t){var i=this.calculations,s=this.options.typeOptions,n=this.chart.xAxis[s.xAxis],a=this.chart.yAxis[s.yAxis],o=this.calculations.getPointPos,e=this.offsetX,h=this.offsetY;this.xAxisMin=o(n,this.startXMin,e),this.xAxisMax=o(n,this.startXMax,e),this.yAxisMin=o(a,this.startYMin,h),this.yAxisMax=o(a,this.startYMax,h),this.min=i.min.call(this),this.max=i.max.call(this),this.average=i.average.call(this),this.bins=i.bins.call(this),t&&this.resize(0,0)},getPointPos:function(t,i,s){return t.toValue(t.toPixels(i)+s)},updateStartPoints:function(t,i,s,n,a){var o=this.options.typeOptions,e=o.selectType,h=this.chart.xAxis[o.xAxis],r=this.chart.yAxis[o.yAxis],x=this.calculations.getPointPos,l=this.startXMin,p=this.startXMax,c=this.startYMin,y=this.startYMax,M=this.offsetX,A=this.offsetY;i&&("x"===e?0===s?this.startXMin=x(h,l,n):this.startXMax=x(h,p,n):"y"===e?0===s?this.startYMin=x(r,c,a):this.startYMax=x(r,y,a):(this.startXMax=x(h,p,n),this.startYMax=x(r,y,a))),t&&(this.startXMin=x(h,l,M),this.startXMax=x(h,p,M),this.startYMin=x(r,c,A),this.startYMax=x(r,y,A),this.offsetX=0,this.offsetY=0)},defaultFormatter:function(){return"Min: "+this.min+"<br>Max: "+this.max+"<br>Average: "+this.average+"<br>Bins: "+this.bins},getExtremes:function(t,i,s,n){return{xAxisMin:Math.min(i,t),xAxisMax:Math.max(i,t),yAxisMin:Math.min(n,s),yAxisMax:Math.max(n,s)}},min:function(){var t=1/0,i=this.chart.series,s=this.calculations.getExtremes(this.xAxisMin,this.xAxisMax,this.yAxisMin,this.yAxisMax),n=!1;return i.forEach(function(i){i.visible&&"highcharts-navigator-series"!==i.options.id&&i.points.forEach(function(i){!i.isNull&&i.y<t&&i.x>s.xAxisMin&&i.x<=s.xAxisMax&&i.y>s.yAxisMin&&i.y<=s.yAxisMax&&(t=i.y,n=!0)})}),n||(t=""),t},max:function(){var t=-1/0,i=this.chart.series,s=this.calculations.getExtremes(this.xAxisMin,this.xAxisMax,this.yAxisMin,this.yAxisMax),n=!1;return i.forEach(function(i){i.visible&&"highcharts-navigator-series"!==i.options.id&&i.points.forEach(function(i){!i.isNull&&i.y>t&&i.x>s.xAxisMin&&i.x<=s.xAxisMax&&i.y>s.yAxisMin&&i.y<=s.yAxisMax&&(t=i.y,n=!0)})}),n||(t=""),t},average:function(){var t="";return""!==this.max&&""!==this.min&&(t=(this.max+this.min)/2),t},bins:function(){var t=0,i=this.chart.series,s=this.calculations.getExtremes(this.xAxisMin,this.xAxisMax,this.yAxisMin,this.yAxisMax),n=!1;return i.forEach(function(i){i.visible&&"highcharts-navigator-series"!==i.options.id&&i.points.forEach(function(i){!i.isNull&&i.x>s.xAxisMin&&i.x<=s.xAxisMax&&i.y>s.yAxisMin&&i.y<=s.yAxisMax&&(t++,n=!0)})}),n||(t=""),t}}},{typeOptions:{selectType:"xy",xAxis:0,yAxis:0,background:{fill:"rgba(130, 170, 255, 0.4)",strokeWidth:0,stroke:void 0},crosshairX:{enabled:!0,zIndex:6,dashStyle:"Dash",markerEnd:"arrow"},crosshairY:{enabled:!0,zIndex:6,dashStyle:"Dash",markerEnd:"arrow"},label:{enabled:!0,style:{fontSize:"11px",color:"#666666"},formatter:void 0}},controlPointOptions:{positioner:function(t){var i,s,n=this.index,a=t.chart,o=t.options,e=o.typeOptions,h=e.selectType,r=o.controlPointOptions,x=a.inverted,l=a.xAxis[e.xAxis],p=a.yAxis[e.yAxis],c=t.xAxisMax,y=t.yAxisMax,M=t.calculations.getExtremes(t.xAxisMin,t.xAxisMax,t.yAxisMin,t.yAxisMax);return"x"===h&&(y=(M.yAxisMax-M.yAxisMin)/2,0===n&&(c=t.xAxisMin)),"y"===h&&(c=M.xAxisMin+(M.xAxisMax-M.xAxisMin)/2,0===n&&(y=t.yAxisMin)),x?(i=p.toPixels(y),s=l.toPixels(c)):(i=l.toPixels(c),s=p.toPixels(y)),{x:i-r.width/2,y:s-r.height/2}},events:{drag:function(t,i){var s=this.mouseMoveToTranslation(t),n=i.options.typeOptions.selectType,a=this.index,o="y"===n?0:s.x,e="x"===n?0:s.y;i.resize(o,e,a,n),i.resizeX+=o,i.resizeY+=e,i.redraw(!1,!0)}}}}),Annotation.types.measure=Measure;export default Measure;