"use strict";import H from"../../parts/Globals.js";import"../../parts/Utilities.js";var Annotation=H.Annotation,MockPoint=Annotation.MockPoint;function VerticalLine(){H.Annotation.apply(this,arguments)}VerticalLine.connectorFirstPoint=function(t){var n=t.annotation,o=n.points[0],i=MockPoint.pointToPixels(o,!0),e=i.y,r=n.options.typeOptions.label.offset;return n.chart.inverted&&(e=i.x),{x:o.x,xAxis:o.series.xAxis,y:e+r}},VerticalLine.connectorSecondPoint=function(t){var n=t.annotation,o=n.options.typeOptions,i=n.points[0],e=o.yOffset,r=MockPoint.pointToPixels(i,!0)[n.chart.inverted?"x":"y"];return o.label.offset<0&&(e*=-1),{x:i.x,xAxis:i.series.xAxis,y:r+e}},H.extendAnnotation(VerticalLine,null,{getPointsOptions:function(){return[this.options.typeOptions.point]},addShapes:function(){var t=this.options.typeOptions,n=this.initShape(H.merge(t.connector,{type:"path",points:[VerticalLine.connectorFirstPoint,VerticalLine.connectorSecondPoint]}),!1);t.connector=n.options},addLabels:function(){var t=this.options.typeOptions,n=t.label,o=0,i=n.offset,e=n.offset<0?"bottom":"top",r="center";this.chart.inverted&&(o=n.offset,i=0,e="middle",r=n.offset<0?"right":"left");var s=this.initLabel(H.merge(n,{verticalAlign:e,align:r,x:o,y:i}));t.label=s.options}},{typeOptions:{yOffset:10,label:{offset:-40,point:function(t){return t.annotation.points[0]},allowOverlap:!0,backgroundColor:"none",borderWidth:0,crop:!0,overflow:"none",shape:"rect",text:"{y:.2f}"},connector:{strokeWidth:1,markerEnd:"arrow"}}}),Annotation.types.verticalLine=VerticalLine;export default VerticalLine;