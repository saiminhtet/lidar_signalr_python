"use strict";import H from"../parts/Globals.js";import U from"../parts/Utilities.js";var isArray=U.isArray,seriesType=H.seriesType;seriesType("linearRegression","sma",{params:{xAxisUnit:void 0},tooltip:{valueDecimals:4}},{nameBase:"Linear Regression Indicator",getRegressionLineParameters:function(e,n){var r,t,s,i=this.options.params.index,a=function(e,n){return isArray(e)?e[n]:e},o=e.reduce(function(e,n){return n+e},0),l=n.reduce(function(e,n){return a(n,i)+e},0),p=o/e.length,u=l/n.length,c=0,g=0;for(t=0;t<e.length;t++)c+=(r=e[t]-p)*(a(n[t],i)-u),g+=Math.pow(r,2);return{slope:s=g?c/g:0,intercept:u-s*p}},getEndPointY:function(e,n){return e.slope*n+e.intercept},transformXData:function(e,n){var r=e[0];return e.map(function(e){return(e-r)/n})},findClosestDistance:function(e){var n,r,t;for(t=1;t<e.length-1;t++)(n=e[t]-e[t-1])>0&&(void 0===r||n<r)&&(r=n);return r},getValues:function(e,n){var r,t,s,i,a,o,l,p,u,c=e.xData,g=e.yData,f=n.period,m={xData:[],yData:[],values:[]},h=this.options.params.xAxisUnit||this.findClosestDistance(c);for(t=f-1;t<=c.length-1;t++)s=t-f+1,i=t+1,a=c[t],l=c.slice(s,i),p=g.slice(s,i),u=this.transformXData(l,h),r=this.getRegressionLineParameters(u,p),o=this.getEndPointY(r,u[u.length-1]),m.values.push({regressionLineParameters:r,x:a,y:o}),m.xData.push(a),m.yData.push(o);return m}}),seriesType("linearRegressionSlope","linearRegression",{},{nameBase:"Linear Regression Slope Indicator",getEndPointY:function(e){return e.slope}}),seriesType("linearRegressionIntercept","linearRegression",{},{nameBase:"Linear Regression Intercept Indicator",getEndPointY:function(e){return e.intercept}}),seriesType("linearRegressionAngle","linearRegression",{tooltip:{pointFormat:'<span style="color:{point.color}">●</span>{series.name}: <b>{point.y}°</b><br/>'}},{nameBase:"Linear Regression Angle Indicator",slopeToAngle:function(e){return Math.atan(e)*(180/Math.PI)},getEndPointY:function(e){return this.slopeToAngle(e.slope)}});