"use strict";import H from"../parts/Globals.js";import U from"../parts/Utilities.js";var defined=U.defined,seriesType=H.seriesType,noop=H.noop,merge=H.merge,SMA=H.seriesTypes.sma,EMA=H.seriesTypes.ema,correctFloat=H.correctFloat;seriesType("macd","sma",{params:{shortPeriod:12,longPeriod:26,signalPeriod:9,period:26},signalLine:{zones:[],styles:{lineWidth:1,lineColor:void 0}},macdLine:{zones:[],styles:{lineWidth:1,lineColor:void 0}},threshold:0,groupPadding:.1,pointPadding:.1,states:{hover:{halo:{size:0}}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span> <b> {series.name}</b><br/>Value: {point.MACD}<br/>Signal: {point.signal}<br/>Histogram: {point.y}<br/>'},dataGrouping:{approximation:"averages"},minPointLength:0},{nameComponents:["longPeriod","shortPeriod","signalPeriod"],requiredIndicators:["ema"],pointArrayMap:["y","signal","MACD"],parallelArrays:["x","y","signal","MACD"],pointValKey:"y",markerAttribs:noop,getColumnMetrics:H.seriesTypes.column.prototype.getColumnMetrics,crispCol:H.seriesTypes.column.prototype.crispCol,init:function(){SMA.prototype.init.apply(this,arguments),this.options&&(this.options=merge({signalLine:{styles:{lineColor:this.color}},macdLine:{styles:{color:this.color}}},this.options),this.macdZones={zones:this.options.macdLine.zones,startIndex:0},this.signalZones={zones:this.macdZones.zones.concat(this.options.signalLine.zones),startIndex:this.macdZones.zones.length},this.resetZones=!0)},toYData:function(e){return[e.y,e.signal,e.MACD]},translate:function(){var e=this,o=["plotSignal","plotMACD"];H.seriesTypes.column.prototype.translate.apply(e),e.points.forEach(function(t){[t.signal,t.MACD].forEach(function(s,i){null!==s&&(t[o[i]]=e.yAxis.toPixels(s,!0))})})},destroy:function(){this.graph=null,this.graphmacd=this.graphmacd&&this.graphmacd.destroy(),this.graphsignal=this.graphsignal&&this.graphsignal.destroy(),SMA.prototype.destroy.apply(this,arguments)},drawPoints:H.seriesTypes.column.prototype.drawPoints,drawGraph:function(){for(var e,o=this,t=o.points,s=t.length,i=o.options,n=o.zones,r={options:{gapSize:i.gapSize}},a=[[],[]];s--;)e=t[s],defined(e.plotMACD)&&a[0].push({plotX:e.plotX,plotY:e.plotMACD,isNull:!defined(e.plotMACD)}),defined(e.plotSignal)&&a[1].push({plotX:e.plotX,plotY:e.plotSignal,isNull:!defined(e.plotMACD)});["macd","signal"].forEach(function(e,t){o.points=a[t],o.options=merge(i[e+"Line"].styles,r),o.graph=o["graph"+e],o.currentLineZone=e+"Zones",o.zones=o[o.currentLineZone].zones,SMA.prototype.drawGraph.call(o),o["graph"+e]=o.graph}),o.points=t,o.options=i,o.zones=n,o.currentLineZone=null},getZonesGraphs:function(e){var o=SMA.prototype.getZonesGraphs.call(this,e),t=o;return this.currentLineZone&&((t=o.splice(this[this.currentLineZone].startIndex+1)).length?t.splice(0,0,e[0]):t=[e[0]]),t},applyZones:function(){var e=this.zones;this.zones=this.signalZones.zones,SMA.prototype.applyZones.call(this),this.graphmacd&&this.options.macdLine.zones.length&&this.graphmacd.hide(),this.zones=e},getValues:function(e,o){var t,s,i,n=0,r=[],a=[],l=[],p=[];if(e.xData.length<o.longPeriod+o.signalPeriod)return!1;for(t=EMA.prototype.getValues(e,{period:o.shortPeriod}),s=EMA.prototype.getValues(e,{period:o.longPeriod}),t=t.values,s=s.values,i=1;i<=t.length;i++)defined(s[i-1])&&defined(s[i-1][1])&&defined(t[i+o.shortPeriod+1])&&defined(t[i+o.shortPeriod+1][0])&&r.push([t[i+o.shortPeriod+1][0],0,null,t[i+o.shortPeriod+1][1]-s[i-1][1]]);for(i=0;i<r.length;i++)a.push(r[i][0]),l.push([0,null,r[i][3]]);for(p=(p=EMA.prototype.getValues({xData:a,yData:l},{period:o.signalPeriod,index:2})).values,i=0;i<r.length;i++)r[i][0]>=p[0][0]&&(r[i][2]=p[n][1],l[i]=[0,p[n][1],r[i][3]],null===r[i][3]?(r[i][1]=0,l[i][0]=0):(r[i][1]=correctFloat(r[i][3]-p[n][1]),l[i][0]=correctFloat(r[i][3]-p[n][1])),n++);return{values:r,xData:a,yData:l}}});